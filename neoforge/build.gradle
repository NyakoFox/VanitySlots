plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id "io.github.themrmilchmann.curseforge-publish" version "0.6.1"
    id "com.modrinth.minotaur" version "2.+"
}

curseforge {
    apiToken = env.CURSEFORGE_TOKEN.value
    publications {
        register("curseForge") {
            projectId = "570109"

            artifacts.register("main") {
                from(tasks.named("jar"))

                displayName = "VanitySlots (NeoForge) 2.0.0+1.21.1"

                changelog {
                    content = file('../CHANGELOG.md').text
                }

                relations {
                    requiredDependency("accessories")
                }
            }
        }
    }
}

modrinth {
    token = env.MODRINTH_TOKEN.value
    projectId = "YTVu0oG8"
    versionNumber = project.version.toString() + "+1.21.1"
    versionName = 'VanitySlots (NeoForge) ' + project.version.toString() + "+1.21.1"
    versionType = "release"
    uploadFile = jar
    gameVersions = ["1.21.1"]
    loaders = ["neoforge"]
    changelog = file("../CHANGELOG.md").text
    dependencies {
        required.project "accessories"
    }
}

repositories {
    maven { url 'https://maven.wispforest.io/releases' }
    maven { url 'https://maven.su5ed.dev/releases' }
    maven { url 'https://maven.fabricmc.net' }
    maven { url 'https://maven.shedaniel.me/' }

    maven {
        name = "Fuzs Mod Resources"
        url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
    }
}

dependencies {
    implementation("io.wispforest:accessories-neoforge:${project.accessories_version}")

    //runtimeOnly "fuzs.forgeconfigscreens:forgeconfigscreens-forge:8.0.2"
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }